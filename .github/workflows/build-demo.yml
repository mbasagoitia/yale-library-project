name: Build and Release

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  build-mac:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Restore .env.production.demo
        run: |
          echo "${{ secrets.DEMO_ENV_FILE }}" > .env.production.demo

      - name: Generate config.demo.json
        run: |
          cat <<EOF > config.demo.json
{
  "APP_MODE": "demo",
  "APP_DEV_MODE": false,
  "HTTPS": false,
  "HOST": "localhost",
  "PORT": 3000,
  "WDS_SOCKET_PORT": 3000,
  "API_BASE": "${{ secrets.DEMO_API_BASE }}",
  "API_PORT": 5000,
  "SQLITE_FILE": "${{ secrets.DEMO_SQLITE_FILE }}"
}
EOF

      - name: Install dependencies
        run: npm ci

      - name: Import Developer ID Certificate
        run: |
          echo "$CSC_LINK" | base64 --decode > dev-id-application.p12
          security create-keychain -p actions build.keychain
          security import dev-id-application.p12 -k build.keychain -P "$CSC_KEY_PASSWORD" -T /usr/bin/codesign
          security list-keychains -s build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p actions build.keychain
          security set-keychain-settings -t 3600 -u build.keychain
          security find-identity -v -p codesigning build.keychain
        env:
          CSC_LINK: ${{ secrets.CSC_LINK }}
          CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}

      - name: Build Demo App
        run: npm run build:demo
        env:
          CSC_LINK: ${{ secrets.CSC_LINK }}
          CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
          CSC_IDENTITY_AUTO_DISCOVERY: true
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_APP_SPECIFIC_PASSWORD: ${{ secrets.APPLE_APP_SPECIFIC_PASSWORD }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}

      - name: Verify extended attributes
        run: |
          xattr -rl dist/demo/mac-arm64/Yale\ Philharmonia\ Library\ Catalogue-demo.app || true

      - name: Upload mac build
        uses: actions/upload-artifact@v4
        with:
          name: mac-build
          path: dist/demo/*

  build-win:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Restore .env.production.demo
        run: |
          echo "${{ secrets.DEMO_ENV_FILE }}" > .env.production.demo

      - name: Generate config.demo.json
        run: |
          echo "{
            \"APP_MODE\": \"demo\",
            \"APP_DEV_MODE\": false,
            \"HTTPS\": false,
            \"HOST\": \"localhost\",
            \"PORT\": 3000,
            \"WDS_SOCKET_PORT\": 3000,
            \"API_BASE\": \"${{ secrets.DEMO_API_BASE }}\",
            \"API_PORT\": 5000,
            \"SQLITE_FILE\": \"${{ secrets.DEMO_SQLITE_FILE }}\"
          }" > config.demo.json

      - name: Install dependencies
        run: npm ci

      - name: Build Demo App
        run: npm run build:demo
        env:
          WIN_CSC_LINK: ${{ secrets.WIN_CSC_LINK }}
          WIN_CSC_KEY_PASSWORD: ${{ secrets.WIN_CSC_KEY_PASSWORD }}

      - name: Upload windows build
        uses: actions/upload-artifact@v4
        with:
          name: win-build
          path: dist/demo/*

  release:
    runs-on: ubuntu-latest
    needs: [build-mac, build-win]
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: mac-build
          path: dist-mac

      - uses: actions/download-artifact@v4
        with:
          name: win-build
          path: dist-win

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist-mac/*
            dist-win/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
