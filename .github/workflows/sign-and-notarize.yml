name: Sign and Notarize App

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "Tag for release to sign"
        required: true

jobs:
  notarize-mac:
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download unsigned app.zip
        run: |
          gh release download "${{ github.event.inputs.tag }}" \
            --repo "${{ github.repository }}" \
            --pattern "unsigned-mac-build.zip" \
            --dir .
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Extract unsigned app
        run: |
          mkdir unsigned-build
          unzip -q unsigned-mac-build.zip -d unsigned-build

      - name: Find .app bundle
        id: find-app
        run: |
          APP_PATH=$(find unsigned-build -type d -name "*.app" | head -n1)
          if [ -z "$APP_PATH" ]; then
            echo "No .app found!"
            ls -R unsigned-build
            exit 1
          fi
          echo "app-path=$APP_PATH" >> $GITHUB_OUTPUT

      - name: Import Developer ID Certificate
        run: |
          echo "$CSC_LINK" | base64 --decode > dev-id-application.p12

          security create-keychain -p actions build.keychain
          security import dev-id-application.p12 \
            -k ~/Library/Keychains/build.keychain-db \
            -P "$CSC_KEY_PASSWORD" \
            -T /usr/bin/codesign

          security list-keychains -d user -s ~/Library/Keychains/build.keychain-db
          security default-keychain -s ~/Library/Keychains/build.keychain-db
          security unlock-keychain -p actions ~/Library/Keychains/build.keychain-db
          security set-keychain-settings -lut 3600 ~/Library/Keychains/build.keychain-db
          security set-key-partition-list -S apple-tool:,apple: -s -k actions ~/Library/Keychains/build.keychain-db
        env:
          CSC_LINK: ${{ secrets.CSC_LINK }}
          CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}

      - name: Clean up resource forks
        run: |
          find unsigned-build -name "._*" -delete
          xattr -cr unsigned-build

      - name: Sign app (all components)
        run: |
          set -ex
          APP="${{ steps.find-app.outputs.app-path }}"
          SIGN_ID="Developer ID Application: Marika Basagoitia (R9ZPUC7AGS)"

          # 1. Sign .dylib / executables in Frameworks
          find "$APP/Contents/Frameworks" -type f \( -name "*.dylib" -o -perm +111 \) -print0 | while IFS= read -r -d '' file; do
            codesign --force --options runtime --sign "$SIGN_ID" "$file"
          done

          # 2. Sign all .framework bundles
          find "$APP/Contents/Frameworks" -type d -name "*.framework" -print0 | while IFS= read -r -d '' fw; do
            codesign --force --options runtime --sign "$SIGN_ID" "$fw"
          done

          # 3. Sign Helper apps
          for helper in "$APP/Contents/Frameworks/"*Helper.app; do
            if [ -d "$helper" ]; then
              codesign --force --options runtime --sign "$SIGN_ID" "$helper"
            fi
          done

          # 4. Sign the top-level app
          codesign --force --options runtime --sign "$SIGN_ID" "$APP"

          # 5. Verify
          codesign --verify --deep --strict --verbose=4 "$APP"

      - name: Re-zip app for notarization
        id: zip-app
        run: |
          APP="${{ steps.find-app.outputs.app-path }}"
          ZIP_PATH="signed-mac-build.zip"
          ditto -c -k --keepParent "$APP" "$ZIP_PATH"
          echo "zip-path=$ZIP_PATH" >> $GITHUB_OUTPUT

      - name: Notarize app with notarytool
        id: notarize
        run: |
          ZIP="${{ steps.zip-app.outputs.zip-path }}"
          xcrun notarytool submit "$ZIP" \
            --apple-id "${{ secrets.APPLE_ID }}" \
            --password "${{ secrets.APPLE_APP_SPECIFIC_PASSWORD }}" \
            --team-id "${{ secrets.APPLE_TEAM_ID }}" \
            --wait --output-format json > notarization-result.json

          echo "🔍 Notarization result:"
          cat notarization-result.json

          STATUS=$(jq -r '.status' notarization-result.json)
          if [ "$STATUS" != "Accepted" ]; then
            echo "❌ Notarization failed (status: $STATUS)"
            exit 1
          fi

      - name: Staple notarization ticket
        id: staple
        run: |
          unzip -q signed-mac-build.zip -d stapled-build
          APP=$(find stapled-build -type d -name "*.app" | head -n1)
          xcrun stapler staple "$APP"
          echo "stapled-app=$APP" >> $GITHUB_OUTPUT

      - name: Verify notarized app with spctl
        run: |
          APP="${{ steps.staple.outputs.stapled-app }}"
          spctl --assess --type exec -v "$APP"

      - name: Upload notarized app
        uses: softprops/action-gh-release@v2
        with:
          files: signed-mac-build.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
