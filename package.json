{
  "name": "philharmonia-library-catalogue",
  "description": "A desktop app for the Yale School of Music Philharmonia library system",
  "author": "Marika Basagoitia marika.basagoitia@yale.edu",
  "productName": "Yale Philharmonia Library Catalogue",
  "license": "MIT",
  "version": "0.1.0",
  "private": true,
  "main": "src/main/electron.js",
  "homepage": "./",
  "dependencies": {
    "@fortawesome/fontawesome-free": "^6.5.2",
    "@fortawesome/free-solid-svg-icons": "^6.5.2",
    "@reduxjs/toolkit": "^2.8.2",
    "@testing-library/jest-dom": "^5.17.0",
    "@testing-library/react": "^13.4.0",
    "@testing-library/user-event": "^13.5.0",
    "archiver": "^7.0.1",
    "bootstrap": "^5.3.3",
    "cors": "^2.8.5",
    "ecdsa-sig-formatter": "^1.0.11",
    "electron-store": "^10.0.1",
    "express": "^4.19.2",
    "framer-motion": "^12.23.12",
    "fs-extra": "^11.3.0",
    "json2csv": "^6.0.0-alpha.2",
    "jsonwebtoken": "^9.0.2",
    "jwt-decode": "^4.0.0",
    "knex": "^3.1.0",
    "lucide-react": "^0.513.0",
    "morgan": "^1.10.0",
    "mysql2": "^3.14.3",
    "mysqldump": "^3.2.0",
    "node-fetch": "^3.3.2",
    "nodemon": "^3.1.3",
    "path-browserify": "^1.0.1",
    "pdfjs-dist": "^3.11.174",
    "pdfmake": "^0.2.20",
    "react": "^18.3.1",
    "react-bootstrap": "^2.10.2",
    "react-bootstrap-icons": "^1.11.4",
    "react-datepicker": "^8.4.0",
    "react-dom": "^18.3.1",
    "react-icons": "^5.2.1",
    "react-pdf": "^7.7.3",
    "react-redux": "^9.2.0",
    "react-router-dom": "^6.23.1",
    "react-scripts": "5.0.1",
    "react-toastify": "^11.0.5",
    "redux-persist": "^6.0.0",
    "seedrandom": "^3.0.5",
    "sqlite3": "^5.1.7",
    "web-vitals": "^2.1.4",
    "xml2js": "^0.6.2",
    "xss": "^1.0.15"
  },
  "scripts": {
    "start:internal": "cross-env dotenv -e .env.development.internal -- concurrently -k -n server,react,electron -c blue,green,yellow \"npm run server\" \"npm run react\" \"npm run electron\"",
    "start:demo": "cross-env dotenv -e .env.development.demo -- concurrently -k -n server,react,electron -c blue,green,yellow \"npm run server\" \"npm run react\" \"npm run electron\"",
    "react": "cross-env PORT=3000 HOST=localhost HTTPS=false BROWSER=none WDS_SOCKET_PORT=3000 react-scripts start",
    "server": "node src/server/startServer.js",
    "electron": "wait-on --log --timeout 120000 tcp:3000 && cross-env ELECTRON_START_URL=http://localhost:3000 electron .",

    "prebuild": "rm -rf dist && mkdir -p dist",

    "build:demo:unsigned": "npm run prebuild && CSC_IDENTITY_AUTO_DISCOVERY=false && cross-env CI=false NODE_ENV=production APP_MODE=demo GENERATE_SOURCEMAP=false dotenv -e .env.production.demo -- react-scripts build && electron-builder -c electron-builder.demo.yml --dir",
    "sign:demo": "electron-builder -c electron-builder.demo.yml --mac dmg",
    "build:demo": "npm run prebuild && cross-env CI=false NODE_ENV=production APP_MODE=demo GENERATE_SOURCEMAP=false dotenv -e .env.production.demo -- react-scripts build && electron-builder -c electron-builder.demo.yml",

    "build:internal": "npm run prebuild && cross-env CI=false NODE_ENV=production APP_MODE=internal GENERATE_SOURCEMAP=false dotenv -e .env.production.internal -- react-scripts build && electron-builder -c electron-builder.internal.yml",

    "demo:builddb": "node scripts/demoBuilder/buildDemoDb.js",
    "prepare-env": "cp .env.development.demo.example .env.development.demo || true"
  },
  "eslintConfig": {
    "extends": ["react-app", "react-app/jest"]
  },
  "browserslist": {
    "production": [">0.2%", "not dead", "not op_mini all"],
    "development": ["last 1 chrome version", "last 1 firefox version", "last 1 safari version"]
  },
  "devDependencies": {
    "concurrently": "^9.1.2",
    "cross-env": "^10.0.0",
    "dotenv-cli": "^10.0.0",
    "electron": "^37.4.0",
    "electron-builder": "^26.0.12",
    "wait-on": "^8.0.3"
  }
}
